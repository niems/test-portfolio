{"version":3,"sources":["components/Navbar.js","components/ParticleLayer.js","components/Home.js","components/PageIcon.js","components/About.js","components/PageHeader.js","components/Projects/ProjectSnippet.js","components/Projects/Slideshow.js","components/Projects/ProjectCard.js","components/Projects/Projects.js","components/Contact.js","components/HomeNavBtn.js","components/View.js","App.js","serviceWorker.js","index.js"],"names":["MobileMenu","_ref","onSelect","react_default","a","createElement","className","id","href","onClick","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isMobileMenuDisplayed","handleMenuToggle","bind","assertThisInitialized","handlePageSelection","event","setState","prevState","onPageSelect","type","src","alt","CSSTransition","in","timeout","classNames","Navbar_MobileMenu","PureComponent","particlesJS","window","ParticleLayer","load","Component","React","memo","homeRef","console","log","ref","components_ParticleLayer","PageIcon","icon","imgPath","concat","aboutRef","components_PageIcon","Header","title","toLowerCase","PageHeader","lib","render","PageHeader_Header","renderPlaceholder","loadOnScreen","ProjectSnippet","techStack","onToggle","projectClasses","btnID","SlideShow","index","imgAnimClasses","onNewImage","e","currentTarget","images","length","path","altText","ProjectCard","info","onExit","displayDescriptions","description","map","text","key","Slideshow","Projects","displayedModalInfo","allProjects","onModalToggle","target","projectsRef","components_PageHeader","Projects_ProjectSnippet","assign","Projects_ProjectCard","contactRef","View","components_Home","components_Projects_Projects","components_About","components_Contact","components_HomeNavBtn","App","scrollBehavior","behavior","createRef","preventDefault","history","pushState","undefined","current","scrollIntoView","components_Navbar","components_View","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e891ff7.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst MobileMenu = function ({ onSelect }) {\r\n  return (\r\n    <div className='navbar-menu'>\r\n      <a id='mobile-home-link' href='#home-page' className='navbar-link' onClick={onSelect}>home</a>\r\n      <a id='mobile-projects-link' href='#projects-page' className='navbar-link' onClick={onSelect}>projects</a>\r\n      <a id='mobile-about-link' href='#about-page' className='navbar-link' onClick={onSelect}>about</a>\r\n      <a id='mobile-contact-link' href='#contact-page' className='navbar-link' onClick={onSelect}>contact</a>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nclass Navbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //* toggles the mobile menu if clicked\r\n    this.state = { isMobileMenuDisplayed: false };\r\n    \r\n    //* called when user clicks navbar menu (mobile view only)\r\n    this.handleMenuToggle = this.handleMenuToggle.bind(this);\r\n\r\n    //* called when user selects page from navbar menu (toggles menu off if active)\r\n    this.handlePageSelection = this.handlePageSelection.bind(this);\r\n  }\r\n\r\n  handleMenuToggle(event) {\r\n    this.setState((prevState) => ({\r\n      isMobileMenuDisplayed: !prevState.isMobileMenuDisplayed\r\n    }));\r\n  }\r\n\r\n  handlePageSelection(event) {\r\n    if (this.state.isMobileMenuDisplayed) { //* only deactivates if menu is active\r\n      this.setState({ isMobileMenuDisplayed: false });\r\n    }\r\n\r\n    this.props.onPageSelect(event); //* scrolls to page clicked\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <div id='navbar-pages-wrapper'>\r\n            <a id='projects-link' href='#projects-page' className='navbar-link' onClick={this.props.onPageSelect}>projects</a>\r\n            <a id='about-link' href='#about-page' className='navbar-link' onClick={this.props.onPageSelect}>about</a>\r\n            <a id='contact-link' href='#contact-page' className='navbar-link' onClick={this.props.onPageSelect}>contact</a>\r\n          </div>\r\n\r\n          <button id='navbar-mobile-menu-btn' type='button' onClick={this.handleMenuToggle}>\r\n            <img className='navbar-icon' src='./assets/placeholder/mobileMenu.svg' alt='main menu'/>\r\n          </button>\r\n\r\n          <CSSTransition in={this.state.isMobileMenuDisplayed} timeout={800} classNames='mobile-menu'>\r\n            <MobileMenu onSelect={this.handlePageSelection} /> \r\n          </CSSTransition>\r\n        </nav> \r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport 'particles.js/particles';\r\nconst particlesJS = window.particlesJS;\r\n\r\nclass ParticleLayer extends Component {\r\n  componentDidMount() {\r\n    particlesJS.load('particles-js', './assets/particles.json');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='particles-js'></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParticleLayer;","\r\nimport React from 'react';\r\nimport ParticleLayer from './ParticleLayer';\r\n\r\nconst Home = function ({ homeRef }) {\r\n  console.log('Home page re-rendered');\r\n\r\n  return (\r\n    <article id='home-page' className='main-page' ref={homeRef}>\r\n      <ParticleLayer />\r\n\r\n      <div className='logo-wrapper'>\r\n        <img src='./assets/logo/logo-homepage.svg' alt='site logo' />\r\n      </div>\r\n      <div className='home-info' id='user-name'>Zach Niemann</div>\r\n      <div className='home-info' id='user-title'>Full-stack developer</div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default React.memo(Home); ","import React from 'react';\r\n\r\nconst PageIcon = React.memo(({ icon }) => {\r\n  let imgPath = null; //* image path of the page icon\r\n\r\n  if (icon === 'projects') {\r\n    imgPath = './assets/page-icons/codeIcon.svg';\r\n  }\r\n\r\n  else if (icon === 'about') {\r\n    imgPath = './assets/page-icons/userIcon.svg';\r\n  }\r\n\r\n  else if (icon === 'contact') {\r\n    imgPath = './assets/page-icons/chatIcon.svg';\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`page-icon ${icon}`}>\r\n      <img className='icon-img' src={imgPath} alt={`${icon} page icon`} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PageIcon;","import React from 'react';\r\nimport PageIcon from './PageIcon';\r\n\r\nconst About = function ({ aboutRef }) {\r\n  console.log('About page re-rendered');\r\n\r\n  return (\r\n    <article id='about-page' className='main-page' ref={aboutRef}>\r\n      <PageIcon icon='about' />\r\n      <header>\r\n        <h2 className='header-page'>About</h2>\r\n      </header>\r\n      <p className='page-info'>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Eget est lorem ipsum dolor. Nulla facilisi nullam vehicula ipsum a arcu cursus vitae. Ac tortor dignissim convallis aenean et tortor at risus. A iaculis at erat pellentesque. A lacus vestibulum sed arcu non odio. Quisque egestas diam in arcu. Odio facilisis mauris sit amet massa. Pellentesque sit amet porttitor eget dolor morbi non arcu. Lorem mollis aliquam ut porttitor leo a diam. Mattis aliquam faucibus purus in massa tempor nec feugiat nisl.\r\n  \r\n        Cursus euismod quis viverra nibh cras pulvinar mattis nunc. Facilisis magna etiam tempor orci eu. Cursus euismod quis viverra nibh cras. Pretium vulputate sapien nec sagittis. At tellus at urna condimentum mattis. Porttitor eget dolor morbi non arcu risus quis varius. Purus in mollis nunc sed id semper risus in. Nisi scelerisque eu ultrices vitae auctor eu augue ut lectus. A diam sollicitudin tempor id eu nisl nunc. Risus ultricies tristique nulla aliquet enim tortor. Et odio pellentesque diam volutpat commodo sed egestas. Massa tincidunt dui ut ornare lectus sit amet. Donec enim diam vulputate ut pharetra sit amet aliquam id. Volutpat diam ut venenatis tellus. Scelerisque viverra mauris in aliquam. Nisl pretium fusce id velit ut tortor pretium.\r\n        \r\n        Tempor nec feugiat nisl pretium fusce id. At varius vel pharetra vel turpis nunc eget. In massa tempor nec feugiat. Faucibus ornare suspendisse sed nisi. Turpis egestas pretium aenean pharetra magna ac placerat vestibulum lectus. Ac felis donec et odio pellentesque diam volutpat commodo. Varius duis at consectetur lorem donec massa sapien faucibus et. Tortor posuere ac ut consequat semper viverra nam. Velit aliquet sagittis id consectetur purus ut faucibus pulvinar elementum. Aliquet sagittis id consectetur purus ut faucibus pulvinar elementum integer.\r\n        \r\n        Nam at lectus urna duis convallis. Diam quam nulla porttitor massa id neque aliquam vestibulum. Sapien et ligula ullamcorper malesuada proin libero nunc consequat. Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Sed lectus vestibulum mattis ullamcorper velit sed ullamcorper morbi tincidunt. Justo laoreet sit amet cursus sit. Suspendisse faucibus interdum posuere lorem. Mus mauris vitae ultricies leo integer malesuada nunc vel risus. Lacus sed turpis tincidunt id. Lacinia quis vel eros donec ac. Nibh ipsum consequat nisl vel pretium lectus. At imperdiet dui accumsan sit amet nulla facilisi morbi. Nibh nisl condimentum id venenatis a condimentum vitae sapien pellentesque. Faucibus pulvinar elementum integer enim. At varius vel pharetra vel. Venenatis lectus magna fringilla urna porttitor. Blandit libero volutpat sed cras ornare arcu dui. Velit aliquet sagittis id consectetur purus ut faucibus pulvinar elementum.\r\n        \r\n        \r\n        Nullam eget felis eget nunc lobortis mattis. Diam phasellus vestibulum lorem sed risus ultricies. Nam libero justo laoreet sit amet cursus. Eros in cursus turpis massa tincidunt dui ut ornare lectus. A condimentum vitae sapien pellentesque. Pellentesque elit ullamcorper dignissim cras. Risus in hendrerit gravida rutrum quisque non tellus. Ullamcorper eget nulla facilisi etiam dignissim diam. Lorem ipsum dolor sit amet consectetur. Vitae elementum curabitur vitae nunc sed velit dignissim sodales. Scelerisque fermentum dui faucibus in ornare quam viverra orci sagittis. Suscipit tellus mauris a diam maecenas. Mattis ullamcorper velit sed ullamcorper morbi tincidunt ornare massa. Dictum non consectetur a erat nam at lectus urna. Eget aliquet nibh praesent tristique magna sit amet purus. Cursus metus aliquam eleifend mi in nulla posuere sollicitudin aliquam. Ac orci phasellus egestas tellus.\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default React.memo(About);","import React from 'react';\r\nimport { Defer } from 'react-progressive-loader';\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header>\r\n      <h2 id={`${title.toLowerCase()}-header`} className='header-page'>{title}</h2>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PageHeader = (props) => {\r\n  return (\r\n    <Defer\r\n      render={() => <Header {...props} />}\r\n      renderPlaceholder={() => <div>Loading...</div>}\r\n      loadOnScreen\r\n    />\r\n  );\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\n\r\nconst ProjectSnippet = React.memo(({ title, techStack, onToggle }) => {\r\n  //* appends the project title to determine the background image in css\r\n  const projectClasses = `project-snippet ${title}`;\r\n\r\n  //* determines which project is selected when \"learn more\" is clicked\r\n  const btnID = `${title}-info`;\r\n\r\n  return (\r\n    <div className={projectClasses}>\r\n      <div className='snippet-info'>\r\n        {/*<h3 className='snippet-info-title'>{title}</h3>*/}\r\n        <h3 className='header-snippet'>{title}</h3>\r\n        <p className='snippet-info-tech-stack'>{techStack}</p>\r\n        <button id={btnID} type='button' className='snippet-info-btn' onClick={onToggle}>MORE INFO</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProjectSnippet;","import React from 'react';\r\n\r\nclass SlideShow extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //! will need to be reset to 0 if new data is passed (different project),\r\n    //! as the index may be out-of-range otherwise\r\n    \r\n    this.state = {\r\n      index: 0, //* stores the current image index\r\n    }; \r\n\r\n    //* switches between '' / active to refresh the css animation\r\n    this.imgAnimClasses = '';\r\n\r\n    //* called when user clicks the left/right slideshow arrow\r\n    this.onNewImage = this.onNewImage.bind(this);\r\n  }\r\n\r\n  //* resets the image index if a different project is selected\r\n  static getDerivedStateFromProps(props, state) {\r\n    //* new project selected - the image index would be out of range\r\n    if (state.index >= props.images.length) {\r\n      return { index: 0 }; //* reset image index\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  onNewImage(e) {\r\n    const { id } = e.currentTarget;\r\n    let index = 0; //* new slideshow image index\r\n    console.log(`onNewImage id: ${id}`);\r\n\r\n    //* displays next image\r\n    if (id === 'slideshow-next-btn') {\r\n      if (this.state.index + 1 < this.props.images.length) { //* next images exist\r\n        index = this.state.index + 1;\r\n      }\r\n    }\r\n\r\n    //* displays previous image\r\n    else {\r\n      if (this.state.index - 1 >= 0) { //* previous images exist\r\n        index = this.state.index - 1;\r\n      }\r\n      \r\n      else { //* no previous images - looping to the back of the project images\r\n        index = this.props.images.length - 1;\r\n      }\r\n    }\r\n\r\n    //* toggles the image class so the css animation refreshes\r\n    this.imgAnimClasses = (this.imgAnimClasses === '') ? 'active' : '';\r\n\r\n    //* updates the image displayed \r\n    this.setState({ index });\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log('Slideshow rerendered');\r\n\r\n    return (\r\n      <div className='slideshow'>\r\n        <button id='slideshow-prev-btn' className='slideshow-nav-btn' type='button' onClick={this.onNewImage}>\r\n          <img src='./assets/placeholder/arrowLeft.svg' alt='navigate back' />\r\n        </button>\r\n\r\n        <button id='slideshow-next-btn' className='slideshow-nav-btn rotate-img' type='button' onClick={this.onNewImage}>\r\n          <img src='./assets/placeholder/arrowLeft.svg' alt='navigate forward' />\r\n        </button>\r\n\r\n        <img className={`slideshow-project-img ${this.imgAnimClasses}`}\r\n             src={this.props.images[this.state.index].path}\r\n             alt={this.props.images[this.state.index].altText} />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './Slideshow';\r\n\r\nconst ProjectCard = React.memo(({ info, onExit }) => {\r\n  //* array of project descriptions are broken into individual paragraphs\r\n  const displayDescriptions = info.description.map((text, index) => <p key={index} className='card-description'>{text}</p>);\r\n\r\n  return (\r\n    <div className='project-card'>\r\n      <Slideshow images={info.images} />\r\n\r\n      <h3 className='header-card'>{info.title}</h3>\r\n      <p className='card-tech-stack'>{info.techStack}</p>\r\n      {displayDescriptions}\r\n\r\n      {/*<button className='exit-btn' type='button' onClick={onExit}>x</button>*/}\r\n      <button className='exit-btn' type='button' onClick={onExit}>\r\n        <img src='./assets/placeholder/close.svg' alt='close project' />\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProjectCard;","\r\nimport React from 'react';\r\nimport PageIcon from '../PageIcon';\r\nimport PageHeader from '../PageHeader';\r\nimport ProjectSnippet from './ProjectSnippet';\r\nimport ProjectCard from './ProjectCard';\r\n\r\n\r\nclass Projects extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //* if user clicks 'learn more' the project selected will have its\r\n    //* data stored here. If no project is selected, the value is null\r\n    this.state = { displayedModalInfo: null }; \r\n\r\n    //! description and images are used ONLY in the ProjectCard\r\n    this.allProjects = [\r\n      {\r\n        title: 'Whisper',\r\n        techStack: 'Electron | Node | React | Socket.IO',\r\n        description: [\r\n          'Whisper is the first chat app I coded using React!',\r\n          'While private messaging and group chat work on the web, I also coded it as a desktop application using Electron wraps the web abb for distribution on Windows/Mac/Linux.'\r\n        ],\r\n        images: [\r\n          {\r\n            path: './assets/projects/whisper-chatting.png',\r\n            altText: 'chatting page'\r\n          },\r\n          {\r\n            path: './assets/projects/whisper-sign-in.png',\r\n            altText: 'sign in page'\r\n          },\r\n          {\r\n            path: './assets/projects/whisper-sign-up.png',\r\n            altText: 'sign up page'\r\n          },\r\n          {\r\n            path: './assets/projects/whisper-landing.png',\r\n            altText: 'landing page'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'Testing',\r\n        techStack: '^',\r\n        description: ['2for modal window'],\r\n        images: [\r\n          {\r\n            path: './assets/projects/whisper-sign-in.png',\r\n            altText: 'sign in page'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n\r\n    //* toggles the project modal display\r\n    this.onModalToggle = this.onModalToggle.bind(this);  \r\n  }\r\n\r\n\r\n  onModalToggle(e) {\r\n    const { id } = e.target;\r\n\r\n    switch (id) {\r\n      case 'Whisper-info':\r\n        this.setState({ displayedModalInfo: this.allProjects[0] });\r\n        break;\r\n      \r\n      case 'Testing-info':\r\n        this.setState({ displayedModalInfo: this.allProjects[1] });\r\n        break;\r\n    \r\n      default:\r\n        this.setState({ displayedModalInfo: null });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('Projects page re-rendered');\r\n\r\n    return (\r\n      <article id='projects-page' className='main-page' ref={this.props.projectsRef}>\r\n        <PageIcon icon='projects' />\r\n        <PageHeader title='Projects' />\r\n\r\n        <p className='page-info'>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Eget est lorem\r\n        ipsum dolor. Nulla facilisi nullam vehicula ipsum a arcu cursus vitae. Ac tortor\r\n          dignissim convallis aenean et tortor at risus. A iacul\r\n        </p>\r\n\r\n        <div className='all-project-snippets'>\r\n          <ProjectSnippet {...this.allProjects[0]} onToggle={this.onModalToggle} />\r\n          <ProjectSnippet {...this.allProjects[1]} onToggle={this.onModalToggle} />\r\n        </div>\r\n\r\n        {this.state.displayedModalInfo && <ProjectCard info={this.state.displayedModalInfo}\r\n                                                       onExit={this.onModalToggle} />}\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Projects; \r\n","\r\nimport React from 'react';\r\nimport PageIcon from './PageIcon';\r\n\r\nconst Contact = function ({ contactRef }) {\r\n  console.log('Contact page re-rendered');\r\n\r\n  return (\r\n    <article id='contact-page' className='main-page' ref={contactRef}>\r\n      <PageIcon icon='contact' />\r\n      <header>\r\n        <h2 className='header-page'>Contact</h2>\r\n      </header>\r\n      <p className='page-info'>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Eget est lorem ipsum dolor. Nulla facilisi nullam vehicula ipsum a arcu cursus vitae. Ac tortor dignissim convallis aenean et tortor at risus. A iaculis at erat pellentesque. A lacus vestibulum sed arcu non odio. Quisque egestas diam in arcu. Odio facilisis mauris sit amet massa. Pellentesque sit amet porttitor eget dolor morbi non arcu. Lorem mollis aliquam ut porttitor leo a diam. Mattis aliquam faucibus purus in massa tempor nec feugiat nisl.\r\n  \r\n        Cursus euismod quis viverra nibh cras pulvinar mattis nunc. Facilisis magna etiam tempor orci eu. Cursus euismod quis viverra nibh cras. Pretium vulputate sapien nec sagittis. At tellus at urna condimentum mattis. Porttitor eget dolor morbi non arcu risus quis varius. Purus in mollis nunc sed id semper risus in. Nisi scelerisque eu ultrices vitae auctor eu augue ut lectus. A diam sollicitudin tempor id eu nisl nunc. Risus ultricies tristique nulla aliquet enim tortor. Et odio pellentesque diam volutpat commodo sed egestas. Massa tincidunt dui ut ornare lectus sit amet. Donec enim diam vulputate ut pharetra sit amet aliquam id. Volutpat diam ut venenatis tellus. Scelerisque viverra mauris in aliquam. Nisl pretium fusce id velit ut tortor pretium.\r\n        \r\n        \r\n        \r\n        Nullam eget felis eget nunc lobortis mattis. Diam phasellus vestibulum lorem sed risus ultricies. Nam libero justo laoreet sit amet cursus. Eros in cursus turpis massa tincidunt dui ut ornare lectus. A condimentum vitae sapien pellentesque. Pellentesque elit ullamcorper dignissim cras. Risus in hendrerit gravida rutrum quisque non tellus. Ullamcorper eget nulla facilisi etiam dignissim diam. Lorem ipsum dolor sit amet consectetur. Vitae elementum curabitur vitae nunc sed velit dignissim sodales. Scelerisque fermentum dui faucibus in ornare quam viverra orci sagittis. Suscipit tellus mauris a diam maecenas. Mattis ullamcorper velit sed ullamcorper morbi tincidunt ornare massa. Dictum non consectetur a erat nam at lectus urna. Eget aliquet nibh praesent tristique magna sit amet purus. Cursus metus aliquam eleifend mi in nulla posuere sollicitudin aliquam. Ac orci phasellus egestas tellus.\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default React.memo(Contact); ","import React from 'react';\r\n\r\nconst HomeNavBtn = function ({ onPageSelect }) {\r\n  return (\r\n    <button id='home-nav-btn' onClick={onPageSelect}>\r\n      <img id='home-nav-img' src='./assets/placeholder/arrowUp.svg' alt='navigate to homepage' />\r\n    </button>\r\n  )\r\n};\r\n\r\nexport default React.memo(HomeNavBtn);","import React from 'react';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Projects from './Projects/Projects';\r\nimport Contact from './Contact';\r\nimport HomeNavBtn from './HomeNavBtn';\r\n\r\n\r\nconst View = function ({ onPageSelect, homeRef, aboutRef, projectsRef, contactRef }) {\r\n  return (\r\n    <main id='main-view'>\r\n      <Home homeRef={homeRef} />\r\n\r\n      <div className='home-nav-btn-container'>\r\n        <Projects projectsRef={projectsRef} />\r\n        <About aboutRef={aboutRef} />\r\n        <Contact contactRef={contactRef} />\r\n\r\n        <HomeNavBtn onPageSelect={onPageSelect} /> \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default View;","import React from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport View from './components/View';\r\nimport './main.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //* callback when user selects a page to navigate to on the navbar\r\n    this.onPageSelect = this.onPageSelect.bind(this); \r\n\r\n    this.scrollBehavior = { behavior: 'smooth' };\r\n    this.homeRef = React.createRef();\r\n    this.aboutRef = React.createRef();\r\n    this.projectsRef = React.createRef();\r\n    this.contactRef = React.createRef();\r\n  }\r\n\r\n  onPageSelect(e) {\r\n    e.preventDefault(); //* prevents immediately jumping to page\r\n    const { id } = e.currentTarget; //* page id to navigate to\r\n\r\n    //* navigate to homepage\r\n    if (id === 'home-nav-btn' || id === 'mobile-home-link') {\r\n      window.history.pushState(undefined, undefined, '#home-page');\r\n      this.homeRef.current.scrollIntoView(this.scrollBehavior);\r\n    }\r\n\r\n    //* navigate to about page\r\n    else if (id === 'about-link' || id === 'mobile-about-link') {\r\n      window.history.pushState(undefined, undefined, '#about-page');\r\n      this.aboutRef.current.scrollIntoView(this.scrollBehavior);\r\n    }\r\n\r\n    //* navigate to projects page\r\n    else if (id === 'projects-link' || id === 'mobile-projects-link') {\r\n      window.history.pushState(undefined, undefined, '#projects-page');\r\n      this.projectsRef.current.scrollIntoView(this.scrollBehavior);\r\n    }\r\n\r\n    //* navigate to contact page\r\n    else if (id === 'contact-link' || id === 'mobile-contact-link') {\r\n      window.history.pushState(undefined, undefined, '#contact-page');\r\n      this.contactRef.current.scrollIntoView(this.scrollBehavior);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Navbar onPageSelect={this.onPageSelect} />\r\n\r\n        <View onPageSelect={this.onPageSelect} homeRef={this.homeRef} aboutRef={this.aboutRef} \r\n              projectsRef={this.projectsRef} contactRef={this.contactRef} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}